.wrapper {
  padding: 30px 0; }

#wrapper-hero {
  padding: 0px !important; }

.sticky,
.gallery-caption,
.bypostauthor {
  font-size: inherit; }

.wrapper#wrapper-sticky {
  border-bottom: 1px solid #dee2e6; }

#wrapper-footer-full,
#wrapper-static-hero {
  background-color: #e9ecef; }

.wp-caption {
  font-size: inherit; }

.wp-caption-text {
  font-size: inherit; }

.alignleft {
  display: inline;
  float: left;
  margin-right: 1.5em; }

.alignright {
  display: inline;
  float: right;
  margin-left: 1.5em; }

.entry-footer span {
  padding-right: 10px; }

img.wp-post-image,
article img,
figure,
img,
#secondary img {
  max-width: 100%;
  height: auto; }

a.skip-link {
  position: fixed;
  z-index: 1000;
  top: 0px;
  right: 0px; }

.jumbotron {
  margin-bottom: 0px; }

.navbar-dark .navbar-nav .dropdown-menu .nav-link {
  display: block;
  width: 100%;
  padding: 0.25rem 1.5rem;
  clear: both;
  font-weight: 400;
  color: #212529 !important;
  text-align: inherit;
  white-space: nowrap;
  background: none;
  border: 0; }
  .navbar-dark .navbar-nav .dropdown-menu .nav-link.active, .navbar-dark .navbar-nav .dropdown-menu .nav-link:active {
    color: #fff !important;
    text-decoration: none;
    background-color: #007bff; }
  .navbar-dark .navbar-nav .dropdown-menu .nav-link.disabled, .navbar-dark .navbar-nav .dropdown-menu .nav-link:disabled {
    color: #adb5bd !important;
    background-color: transparent; }

.navbar-light .navbar-brand a {
  color: rgba(0, 0, 0, 0.9); }

.navbar-dark .navbar-brand a {
  color: #fff; }

.navbar h1 {
  font-weight: 400; }

.gallery {
  margin-bottom: 1.5em; }

.gallery-item {
  display: inline-block;
  text-align: center;
  vertical-align: top;
  width: 100%; }
  .gallery-columns-2 .gallery-item {
    max-width: 50%; }
  .gallery-columns-3 .gallery-item {
    max-width: 33.33%; }
  .gallery-columns-4 .gallery-item {
    max-width: 25%; }
  .gallery-columns-5 .gallery-item {
    max-width: 20%; }
  .gallery-columns-6 .gallery-item {
    max-width: 16.66%; }
  .gallery-columns-7 .gallery-item {
    max-width: 14.28%; }
  .gallery-columns-8 .gallery-item {
    max-width: 12.5%; }
  .gallery-columns-9 .gallery-item {
    max-width: 11.11%; }

.gallery-caption {
  display: block; }

#page {
  display: -webkit-box;
  display: -webkit-flex;
  display: -moz-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-flow: row wrap;
     -moz-box-orient: horizontal;
     -moz-box-direction: normal;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap; }
  #page .wrapper {
    -webkit-box-flex: 1;
    -webkit-flex: 1 100%;
       -moz-box-flex: 1;
        -ms-flex: 1 100%;
            flex: 1 100%;
    padding: 0px; }
  #page #index-wrapper, #page #single-wrapper, #page #search-wrapper, #page #archive-wrapper, #page #error-404-wrapper, #page #page-wrapper {
    -webkit-box-ordinal-group: 2;
    -webkit-order: 1;
       -moz-box-ordinal-group: 2;
        -ms-flex-order: 1;
            order: 1;
    margin: 5px; }
    #page #index-wrapper .container, #page #single-wrapper .container, #page #search-wrapper .container, #page #archive-wrapper .container, #page #error-404-wrapper .container, #page #page-wrapper .container {
      padding: 0;
      margin: 0 auto; }
    #page #index-wrapper .content-area, #page #single-wrapper .content-area, #page #search-wrapper .content-area, #page #archive-wrapper .content-area, #page #error-404-wrapper .content-area, #page #page-wrapper .content-area {
      padding: 0px; }
  #page #left-sidebar {
    -webkit-box-ordinal-group: 3;
    -webkit-order: 2;
       -moz-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2;
    -webkit-box-flex: 1;
    -webkit-flex: 1 100%;
       -moz-box-flex: 1;
        -ms-flex: 1 100%;
            flex: 1 100%; }
  #page #right-sidebar {
    -webkit-box-ordinal-group: 3;
    -webkit-order: 2;
       -moz-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2;
    -webkit-box-flex: 1;
    -webkit-flex: 1 100%;
       -moz-box-flex: 1;
        -ms-flex: 1 100%;
            flex: 1 100%; }
  #page #wrapper-footer-full {
    -webkit-box-ordinal-group: 4;
    -webkit-order: 3;
       -moz-box-ordinal-group: 4;
        -ms-flex-order: 3;
            order: 3;
    -webkit-box-flex: 1;
    -webkit-flex: 1 100%;
       -moz-box-flex: 1;
        -ms-flex: 1 100%;
            flex: 1 100%; }
  #page #wrapper-footer {
    -webkit-box-ordinal-group: 5;
    -webkit-order: 4;
       -moz-box-ordinal-group: 5;
        -ms-flex-order: 4;
            order: 4;
    -webkit-box-flex: 1;
    -webkit-flex: 1 100%;
       -moz-box-flex: 1;
        -ms-flex: 1 100%;
            flex: 1 100%; }
  #page .row {
    margin: 0; }
  #page .widget-area {
    margin: 10px 0;
    padding-top: 0;
    padding-bottom: 0; }
  #page #left-sidebar, #page #right-sidebar {
    margin: 6px 0px; }
    #page #left-sidebar aside, #page #right-sidebar aside {
      margin: 12px 0px; }
      #page #left-sidebar aside ul, #page #right-sidebar aside ul {
        margin: 0px; }

@media (min-width: 768px) {
  #page #wrapper-navbar {
    -webkit-box-ordinal-group: 1;
    -webkit-order: 0;
       -moz-box-ordinal-group: 1;
        -ms-flex-order: 0;
            order: 0;
    -webkit-box-flex: 1;
    -webkit-flex: 1 100%;
       -moz-box-flex: 1;
        -ms-flex: 1 100%;
            flex: 1 100%; }
    #page #wrapper-navbar #main-nav {
      background-size: cover;
      height: 382px; }
      #page #wrapper-navbar #main-nav #logo-branding {
        position: relative;
        /* width: 100%; */
        margin: 51px auto; }
        #page #wrapper-navbar #main-nav #logo-branding .navbar-brand img {
          width: 159px; }
        #page #wrapper-navbar #main-nav #logo-branding .logo_text {
          font-size: 36px;
          top: 74px;
          position: absolute;
          left: 124px; }
        #page #wrapper-navbar #main-nav #logo-branding .logo_text-only {
          font-size: 76px;
          position: relative;
          top: 52px; }
        #page #wrapper-navbar #main-nav #logo-branding .logo_tagline-only {
          position: relative;
          left: 0px;
          top: 6px; }
        #page #wrapper-navbar #main-nav #logo-branding .logo_tagline {
          position: absolute;
          left: 144px;
          top: 115px; }
    #page #wrapper-navbar .flex-colomn {
      display: -webkit-box;
      display: -webkit-flex;
      display: -moz-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -webkit-flex-direction: column;
         -moz-box-orient: vertical;
         -moz-box-direction: normal;
          -ms-flex-direction: column;
              flex-direction: column;
      -webkit-box-flex: 1;
      -webkit-flex: 1;
         -moz-box-flex: 1;
          -ms-flex: 1;
              flex: 1; }
      #page #wrapper-navbar .flex-colomn #logo-branding,
      #page #wrapper-navbar .flex-colomn .flex-grow-max {
        -webkit-box-flex: 100;
        -webkit-flex-grow: 100;
           -moz-box-flex: 100;
            -ms-flex-positive: 100;
                flex-grow: 100; }
      #page #wrapper-navbar .flex-colomn #logo-branding,
      #page #wrapper-navbar .flex-colomn .flex-order-1 {
        -webkit-box-ordinal-group: 2;
        -webkit-order: 1;
           -moz-box-ordinal-group: 2;
            -ms-flex-order: 1;
                order: 1; }
      #page #wrapper-navbar .flex-colomn #navbarNavDropdown,
      #page #wrapper-navbar .flex-colomn .flex-order-2 {
        -webkit-box-ordinal-group: 3;
        -webkit-order: 2;
           -moz-box-ordinal-group: 3;
            -ms-flex-order: 2;
                order: 2; }
    #page #wrapper-navbar .container-fullWidth,
    #page #wrapper-navbar .container > #navbarNavDropdown {
      max-width: 100%;
      padding: 0px; }
      #page #wrapper-navbar .container-fullWidth .Menu1,
      #page #wrapper-navbar .container > #navbarNavDropdown .Menu1 {
        max-width: 1140px;
        width: 100%;
        margin: auto; }
    #page #wrapper-navbar #navbarNavDropdown {
      width: 100%;
      border-radius: 0px;
      background: -webkit-gradient(linear, left top, left bottom, from(rgba(255, 255, 255, 0)), color-stop(15.1%, rgba(255, 255, 255, 0.643271)), color-stop(74.48%, rgba(255, 255, 255, 0.99)), color-stop(84.9%, rgba(255, 255, 255, 0.21)), color-stop(99.98%, rgba(255, 255, 255, 0)), color-stop(99.99%, rgba(255, 255, 255, 0.135417)));
      background: -webkit-linear-gradient(top, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.643271) 15.1%, rgba(255, 255, 255, 0.99) 74.48%, rgba(255, 255, 255, 0.21) 84.9%, rgba(255, 255, 255, 0) 99.98%, rgba(255, 255, 255, 0.135417) 99.99%);
      background: -moz-linear-gradient(top, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.643271) 15.1%, rgba(255, 255, 255, 0.99) 74.48%, rgba(255, 255, 255, 0.21) 84.9%, rgba(255, 255, 255, 0) 99.98%, rgba(255, 255, 255, 0.135417) 99.99%);
      background: -o-linear-gradient(top, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.643271) 15.1%, rgba(255, 255, 255, 0.99) 74.48%, rgba(255, 255, 255, 0.21) 84.9%, rgba(255, 255, 255, 0) 99.98%, rgba(255, 255, 255, 0.135417) 99.99%);
      background: linear-gradient(180deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.643271) 15.1%, rgba(255, 255, 255, 0.99) 74.48%, rgba(255, 255, 255, 0.21) 84.9%, rgba(255, 255, 255, 0) 99.98%, rgba(255, 255, 255, 0.135417) 99.99%); }
      #page #wrapper-navbar #navbarNavDropdown .Menu1 {
        padding: 0 12px 12px 12px;
        -webkit-box-pack: left;
        -webkit-justify-content: left;
           -moz-box-pack: left;
            -ms-flex-pack: left;
                justify-content: left; }
        #page #wrapper-navbar #navbarNavDropdown .Menu1 .menu-item {
          background: rgba(255, 255, 255, 0);
          border-radius: 0;
          text-align: center;
          font-weight: 700;
          margin: 12px 0 0 0; }
  #page #index-wrapper,
  #page #single-wrapper,
  #page #search-wrapper,
  #page #archive-wrapper,
  #page #error-404-wrapper,
  #page #page-wrapper {
    -webkit-box-flex: 2;
    -webkit-flex: 2 0px;
       -moz-box-flex: 2;
        -ms-flex: 2 0px;
            flex: 2 0px;
    -webkit-box-ordinal-group: 3;
    -webkit-order: 2;
       -moz-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2;
    padding: 12px; }
  #page #left-sidebar {
    -webkit-box-ordinal-group: 1;
    -webkit-order: 0;
       -moz-box-ordinal-group: 1;
        -ms-flex-order: 0;
            order: 0;
    -webkit-box-flex: 0;
    -webkit-flex: 0 330px;
       -moz-box-flex: 0;
        -ms-flex: 0 330px;
            flex: 0 330px;
    height: -webkit-fit-content;
    height: -moz-fit-content;
    height: fit-content; }
  #page #right-sidebar {
    -webkit-box-ordinal-group: 3;
    -webkit-order: 2;
       -moz-box-ordinal-group: 3;
        -ms-flex-order: 2;
            order: 2;
    height: -webkit-fit-content;
    height: -moz-fit-content;
    height: fit-content; }
  #page #wrapper-footer-full {
    -webkit-box-ordinal-group: 4;
    -webkit-order: 3;
       -moz-box-ordinal-group: 4;
        -ms-flex-order: 3;
            order: 3; }
  #page #wrapper-footer {
    -webkit-box-ordinal-group: 5;
    -webkit-order: 4;
       -moz-box-ordinal-group: 5;
        -ms-flex-order: 4;
            order: 4; }
  #page article,
  #page #right-sidebar,
  #page #left-sidebar {
    margin: 0px; }
  #left-sidebar {
    width: 330px;
    background-position: -198px -362px; }
    #left-sidebar aside {
      margin: 0 0 0 88px;
      padding: 0; } }

#wrapper-navbar {
  width: 100%; }

#main-nav {
  background: -webkit-linear-gradient(left, rgba(255, 255, 255, 0) 3000px, #fff 3195px), url(../img/home_header.jpg) no-repeat;
  background: -moz-linear-gradient(left, rgba(255, 255, 255, 0) 3000px, #fff 3195px), url(../img/home_header.jpg) no-repeat;
  background: -o-linear-gradient(left, rgba(255, 255, 255, 0) 3000px, #fff 3195px), url(../img/home_header.jpg) no-repeat;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 3000px, #fff 3195px), url(../img/home_header.jpg) no-repeat;
  background-size: auto 85px;
  width: 100%; }
  #main-nav #logo-branding {
    position: relative;
    width: 70%; }
    #main-nav #logo-branding .navbar-brand img {
      width: 75px; }
    #main-nav #logo-branding .logo_text {
      text-shadow: 0 4px 4px rgba(0, 0, 0, 0.25) inset;
      text-shadow: 0 4px 4px rgba(0, 0, 0, 0.25);
      font-size: 20px;
      font-weight: 700;
      top: 24px;
      position: absolute;
      left: 65px;
      font-style: normal;
      line-height: 42px; }
      #main-nav #logo-branding .logo_text a {
        color: var(--logo_text); }
    #main-nav #logo-branding .logo_text-color {
      color: var(--logo_text); }
    #main-nav #logo-branding .logo_tagline {
      color: var(--logo_text);
      position: absolute;
      left: 57px;
      top: 51px; }

h1, h1 a {
  color: var(--primary); }

a {
  color: var(--secondary); }

body {
  color: var(--secondary); }

.navbar {
  padding: 0px; }

#navbarNavDropdown {
  background: rgba(0, 0, 0, 0.25); }
  #navbarNavDropdown .Menu1 {
    padding: 0 12px 12px 12px; }
    #navbarNavDropdown .Menu1 .menu-item {
      background: rgba(255, 255, 255, 0.5);
      border-radius: 13px;
      text-align: center;
      font-weight: 700;
      margin: 12px 0 0 0; }

.Box-shadow,
#navbarNavDropdown,
#right-sidebar,
#left-sidebar,
#main {
  /*  filter: drop-shadow(0 4px 4px rgba(0, 0, 0, .25));*/
  border-radius: 25px; }

#right-sidebar {
  /*
    position: relative;
    width: 280px;
    height: 584px;*/
  padding: 12px;
  color: var(--primary); }
  #right-sidebar aside {
    /*position: absolute;
        width: 191px;
        height: 561px;
        left: 78px;
        top: 11px;*/
    background: rgba(255, 255, 255, 0.42);
    mix-blend-mode: normal;
    border-radius: 24px; }
    #right-sidebar aside h3 {
      text-align: center; }
    #right-sidebar aside ul {
      padding: 0;
      padding-bottom: 14px;
      padding-left: 12px;
      list-style: none;
      /*
            position: absolute;
            width: 191px;
            height: 82px;
            left: 78px;
            top: 11px;*/ }
      #right-sidebar aside ul li {
        -webkit-box-flex: 0;
        -webkit-flex: none;
           -moz-box-flex: 0;
            -ms-flex: none;
                flex: none;
        -webkit-box-ordinal-group: 1;
        -webkit-order: 0;
           -moz-box-ordinal-group: 1;
            -ms-flex-order: 0;
                order: 0;
        -webkit-flex-grow: 0;
            -ms-flex-positive: 0;
                flex-grow: 0;
        margin: 0px 5px;
        color: var(--primary); }

#left-sidebar {
  padding: 12px;
  color: var(--primary); }
  #left-sidebar aside {
    margin: 0;
    padding: 0;
    background: rgba(255, 255, 255, 0.42);
    border-radius: 24px; }
    #left-sidebar aside h3 {
      text-align: center; }
    #left-sidebar aside ul {
      padding: 0;
      padding-bottom: 14px;
      padding-left: 12px;
      list-style: none;
      /*
            position: absolute;
            width: 191px;
            height: 82px;
            left: 78px;
            top: 11px;*/ }
      #left-sidebar aside ul li {
        -webkit-box-flex: 0;
        -webkit-flex: none;
           -moz-box-flex: 0;
            -ms-flex: none;
                flex: none;
        -webkit-box-ordinal-group: 1;
        -webkit-order: 0;
           -moz-box-ordinal-group: 1;
            -ms-flex-order: 0;
                order: 0;
        -webkit-flex-grow: 0;
            -ms-flex-positive: 0;
                flex-grow: 0;
        margin: 0px 5px;
        color: var(--primary); }

#wrapper-static-hero {
  background: var(--dark);
  color: var(--light); }

#main {
  background: #fff;
  padding: 12px;
  margin: 0 12px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
